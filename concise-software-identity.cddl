concise-software-identity = {
  global-attributes,
  ? entity-entry,
  ? evidence-entry,
  ? link-entry,
  ? software-meta-entry,
  ? payload-entry,
  ? any-element-entry,
  ? corpus,
  ? patch,
  ? media,
  swid-name,
  ? supplemental,
  tag-id,
  ? tag-version,
  ? version,
  ? version-scheme,
}

any-uri = text
label = text / int

any-attribute = (
  label => text / int / [ 2* text ] / [ 2* int ]
)

any-element-map = {
  global-attributes,
  * label => any-element-map / [ 2* any-element-map ],
} 

global-attributes = (
  ? lang,
  * any-attribute,
)

resource-collection = (
  ? directory-entry,
  ? file-entry,
  ? process-entry,
  ? resource-entry
  * $$resource-extension 
)

file = {
  filesystem-item,
  ? size,
  ? version,
  ? file-hash,
}

filesystem-item = (
  global-attributes,
  ? key,
  ? location,
  fs-name,
  ? root,
)

directory = {
  filesystem-item,
  path-elements,
}

process = {
  global-attributes,
  process-name,
  ? pid,
}

resource = {
  global-attributes,
  type,
}

entity = {
  global-attributes,
  extended-data,
  entity-name,
  ? reg-id,
  role,
  ? thumbprint,
}

evidence = {
  global-attributes,
  resource-collection,
  ? date,
  ? device-id,
}

link = {
  global-attributes,
  ? artifact,
  href,
  ? media,
  ? ownership,
  rel,
  ? type,
  ? use,
}

software-meta = {
  global-attributes,
  ? activation-status,
  ? channel-type,
  ? colloquial-version,
  ? description,
  ? edition,
  ? entitlement-data-required,
  ? entitlement-key,
  ? generator,
  ? persistent-id,
  ? product,
  ? product-family,
  ? revision,
  ? summary,
  ? unspsc-code,
  ? unspsc-version,
}

payload = {
  global-attributes,
  resource-collection,
}

tag-id = (0: text)
swid-name = (1: text)
entity-entry = (2: entity / [ 2* entity ])
evidence-entry = (3: evidence)
link-entry = (4: link / [ 2* link ])
software-meta-entry = (5: software-meta / [ 2* software-meta ])
payload-entry = (6: payload)
any-element-entry = (7: any-element-map / [ 2* any-element-map ])
corpus = (8: bool)
patch = (9: bool)
media = (10: text)
supplemental = (11: bool)
tag-version = (12: integer)
version = (13: text)
version-scheme = (14: text)
lang = (15: text)
directory-entry = (16: directory / [ 2* directory ])
file-entry = (17: file / [ 2* file ])
process-entry = (18: process / [ 2* process ])
resource-entry = (19: resource / [ 2* resource ])
size = (20: integer)
key = (21: bool)
location = (22: text)
fs-name = (23: text)
root = (24: text)
path-elements = (25: { * file-entry,
                       * directory-entry,
                     }
                )
process-name = (26: text)
pid = (27: integer)
type = (28: text)
extended-data = (29: any-element-map / [ 2* any-element-map ])
entity-name = (30: text)
reg-id = (31: any-uri)
role = (32: text / [2* text])
thumbprint = (33: text)
date = (34: time)
device-id = (35: text)
artifact = (36: text)
href = (37: any-uri)
ownership = (38: "shared" / "private" / "abandon")
rel = (39: text)
use = (40: "optional" / "required" / "recommended")
activation-status = (41: text)
channel-type = (42: text)
colloquial-version = (43: text)
description = (44: text)
edition = (45: text)
entitlement-data-required = (46: bool)
entitlement-key = (47: text)
generator = (48: text)
persistent-id = (49: text)
product = (50: text)
product-family = (51: text)
revision = (52: text)
summary = (53: text)
unspsc-code = (54: text)
unspsc-version = (55: text)
file-hash = (56: [ hash-alg-id: int,
                   hash-value: bstr,
                 ]
            )
